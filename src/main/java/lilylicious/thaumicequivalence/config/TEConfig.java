package lilylicious.thaumicequivalence.config;

import lilylicious.thaumicequivalence.utils.TELogger;
import net.minecraftforge.common.config.Configuration;

import java.io.File;

public class TEConfig
{
	public static boolean enableDebugLog;
	public static boolean removeRecipes;
	public static int mode;
	public static boolean taintEMC;
	public static boolean shapedArcaneEMC;
	public static boolean shapelessArcaneEMC;
	public static boolean infusionEMC;
	public static boolean infusionInstabilityEMC;
	public static boolean crucibleEMC;
	public static boolean aspectEMC;
	public static int aerValue;
	public static int terraValue;
	public static int ignisValue;
	public static int aquaValue;
	public static int ordoValue;
	public static int perditioValue;
	public static int shimmerLeafValue;
	public static int quicksilverValue;
	public static int cinderpearlValue;
	public static int amberValue;
	public static int knowledgeFragmentValue;
	public static int brainValue;
	public static int greatwoodLeafValue;
	public static int silverWoodLeafValue;
	public static int primordialPearlAddition;
	public static int instabilityValue;
	
	public static void init(File configFile)
	{
		Configuration config = new Configuration(configFile);
		try
		{
			config.load();
			
			//EMC
			aspectEMC = config.getBoolean("aspectEMC", "emc", true, "Enable autogenerated EMC from aspects. DISABLING WILL BREAK OTHER EMC MAPPERS");
			shapedArcaneEMC = config.getBoolean("shapedArcaneRecipesEMC", "emc", true, "Enable autogenerated EMC from shaped arcane crafting table recipes");
			shapelessArcaneEMC = config.getBoolean("shapelessArcaneRecipesEMC", "emc", true, "Enable autogenerated EMC from shapeless arcane crafting table recipes");
			infusionEMC = config.getBoolean("infusionEMC", "emc", true, "Enable autogenerated EMC from infusion crafting recipes");
			infusionInstabilityEMC = config.getBoolean("infusionInstabilityEMC", "emc", true, "Adds EMC to infusion items based on instability");
			crucibleEMC = config.getBoolean("crucibleEMC", "emc", true, "Enable autogenerated EMC from crucible recipes");
			taintEMC = config.getBoolean("taintEMC", "emc", true, "Enable autogenerated EMC for taint items (soil, fibres, etc)");

			//Default Values
			aerValue = config.getInt("aerValue", "defaultValues", 64, 0, Integer.MAX_VALUE, "The default value of aer");
			terraValue = config.getInt("terraValue", "defaultValues", 64, 0, Integer.MAX_VALUE, "The default value of terra");
			ignisValue = config.getInt("ignisValue", "defaultValues", 64, 0, Integer.MAX_VALUE, "The default value of ignis");
			aquaValue = config.getInt("aquaValue", "defaultValues", 64, 0, Integer.MAX_VALUE, "The default value of aqua");
			ordoValue = config.getInt("ordoValue", "defaultValues", 64, 0, Integer.MAX_VALUE, "The default value of ordo");
			perditioValue = config.getInt("perditioValue", "defaultValues", 64, 0, Integer.MAX_VALUE, "The default value of perditio");
			shimmerLeafValue = config.getInt("shimmerLeafValue", "defaultValues", 128, 0, Integer.MAX_VALUE, "The default value of Shimmerleaf");
			quicksilverValue = config.getInt("quicksilverValue", "defaultValues", 128, 0, Integer.MAX_VALUE, "The default value of Quicksilver");
			cinderpearlValue = config.getInt("cinderpearlValue", "defaultValues", 768, 0, Integer.MAX_VALUE, "The default value of Cinderpearl WARNING GOING LOWER ALSO LOWERS BLAZE POWDER EMC");
			amberValue = config.getInt("amberValue", "defaultValues", 512, 0, Integer.MAX_VALUE, "The default value of Amber");
			knowledgeFragmentValue = config.getInt("knowledgeFragmentValue", "defaultValues", 2048, 0, Integer.MAX_VALUE, "The default value of Knowledge Fragments");
			brainValue = config.getInt("brainValue", "defaultValues", 512, 0, Integer.MAX_VALUE, "The default value of Zombie Brains");
			greatwoodLeafValue = config.getInt("greatwoodLeafValue", "defaultValues", 1, 0, Integer.MAX_VALUE, "The default value of greatwood leaves");
			silverWoodLeafValue = config.getInt("silverWoodLeafValue", "defaultValues", 1, 0, Integer.MAX_VALUE, "The default value of silverwood leaves");
			primordialPearlAddition = config.getInt("primordialPearlAddition", "defaultValues", 131072, 0, Integer.MAX_VALUE, "The default addition to Primordial Pearl EMC that is calculated from the values of primals");
			instabilityValue = config.getInt("instabilityValue", "defaultValues", 8192, 0, Integer.MAX_VALUE, "The default value of instability.");
			
			//Difficulty
			mode = config.getInt("mode", "difficulty", 0, 0, 0, "DISABLED FOR NOW - Mode: 0 = normal, 1 = hardMode, -1 = easyMode(not yet implemented)");
			removeRecipes = config.getBoolean("recipeRemoval", "difficulty", true, "Enable recipe removals, overrides hard mode");

			//Misc
			enableDebugLog = config.getBoolean("debugLogging", "misc", false, "Enable a more verbose debug logging");

			TELogger.logInfo("Loaded configuration file.");
		} catch (Exception e)
		{
			TELogger.logFatal("Caught exception while loading config file!");
			e.printStackTrace();
		} finally
		{
			if (config.hasChanged())
			{
				config.save();
			}
		}
	}
}