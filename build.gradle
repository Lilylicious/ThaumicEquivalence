buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "${minecraft_version}-${thaumicequivalence_version}"
group = "java.lilylicious" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ThaumicEquivalence"

minecraft {
    mappings = 'snapshot_20151229'
    version = "${minecraft_version}-${forge_version}"
    runDir = "eclipse"

    replace "@VERSION@", project.version
    replaceIn "TECore.java"
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // Adds all local libs dependencies in the libs folder
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

repositories {
    maven { //MinecraftForge
        name "MinecraftForge Maven"
        url "http://files.minecraftforge.net/maven/"
    }

    maven { //Waila Repo
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { //NEI Repo
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'Chisel'
        url "http://maven.tterrag.com/"
    }
    ivy {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-([classifier]-)[revision].[ext]"
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

// Dev jar (deobfuscated)
task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    version = "${project.version}"
}

artifacts {
    archives devJar
}

idea.module.inheritOutputDirs = true
